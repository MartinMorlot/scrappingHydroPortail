library(terra)
library(zoo)
stations <- vect("geodata_station_with_correction_more.gpkg")
stations_ids <- stations$Station
station_files <- stations$File_location
min_year = sort(stations$`Start Year`)[2]
max_year = 2025
tS <-  seq(as.Date(paste0(min_year, "/1/1")), as.Date(Sys.Date()))
dataFrame_combined_data <- data.frame(date=tS)
i= 1
library(terra)
library(zoo)
stations <- vect("geodata_station_with_correction_more.gpkg")
stations_ids <- stations$Station
station_files <- stations$File_location
min_year = sort(stations$`Start Year`)[2]
max_year = 2025
tS <-  seq(as.Date(paste0(min_year, "/1/1")), as.Date(Sys.Date()))
dataFrame_combined_data <- data.frame(date=tS)
library(terra)
library(zoo)
stations <- vect("geodata_station_with_correction_more.gpkg")
stations_ids <- stations$Station
station_files <- stations$File_location
min_year = sort(stations$`Start Year`)[2]
max_year = 2025
tS <-  seq(as.Date(paste0(min_year, "/1/1")), as.Date(Sys.Date()))
data_unique_statopm <- list()
print(i)
data <- read.csv(file_to_read, sep=';', header=F, col.names = c("DateTime", "deltaH"))
for(file_to_read in station_files){
print(i)
data <- read.csv(file_to_read, sep=';', header=F, col.names = c("DateTime", "deltaH"))
data$DateTime <- as.POSIXct(data$DateTime, tz="UTC")
data$Date <- as.Date(data$DateTime)
break
max_date <-
serie_data <- rep(NA, length(tS))
data_date <- aggregate(deltaH~Date, data, FUN=min)
data_match <- match(data_date$Date, tS)
data_NOT_in_match <- which(is.na(data_match))
if(length(data_NOT_in_match)>0){
serie_data[data_match[-c(data_NOT_in_match)]] <- data_date$deltaH[-c(data_NOT_in_match)]
} else {
serie_data[data_match] <- data_date$deltaH
}
nonNA <- which(!is.na(serie_data))
interval_data <- min(nonNA):max(nonNA)
serie_data[interval_data] <- na.approx(serie_data)
id <- stations_ids[i]
dataFrame_combined_data[id] <- serie_data
i<- i+1
break
}
View(data)
for(station in stations){
print(i)
break
data <- read.csv(file_to_read, sep=';', header=F, col.names = c("DateTime", "deltaH"))
data$DateTime <- as.POSIXct(data$DateTime, tz="UTC")
data$Date <- as.Date(data$DateTime)
gauging_file
break
max_date <-
serie_data <- rep(NA, length(tS))
data_date <- aggregate(deltaH~Date, data, FUN=min)
data_match <- match(data_date$Date, tS)
data_NOT_in_match <- which(is.na(data_match))
if(length(data_NOT_in_match)>0){
serie_data[data_match[-c(data_NOT_in_match)]] <- data_date$deltaH[-c(data_NOT_in_match)]
} else {
serie_data[data_match] <- data_date$deltaH
}
nonNA <- which(!is.na(serie_data))
interval_data <- min(nonNA):max(nonNA)
serie_data[interval_data] <- na.approx(serie_data)
id <- stations_ids[i]
dataFrame_combined_data[id] <- serie_data
i<- i+1
break
}
for(i in 1:nrow(stations)){
print(i)
break
data <- read.csv(file_to_read, sep=';', header=F, col.names = c("DateTime", "deltaH"))
data$DateTime <- as.POSIXct(data$DateTime, tz="UTC")
data$Date <- as.Date(data$DateTime)
gauging_file
break
max_date <-
serie_data <- rep(NA, length(tS))
data_date <- aggregate(deltaH~Date, data, FUN=min)
data_match <- match(data_date$Date, tS)
data_NOT_in_match <- which(is.na(data_match))
if(length(data_NOT_in_match)>0){
serie_data[data_match[-c(data_NOT_in_match)]] <- data_date$deltaH[-c(data_NOT_in_match)]
} else {
serie_data[data_match] <- data_date$deltaH
}
nonNA <- which(!is.na(serie_data))
interval_data <- min(nonNA):max(nonNA)
serie_data[interval_data] <- na.approx(serie_data)
id <- stations_ids[i]
dataFrame_combined_data[id] <- serie_data
i<- i+1
break
}
file_to_read <- sations$File_location[i]
file_to_read <- stations$File_location[i]
break
data <- read.csv(file_to_read, sep=';', header=F, col.names = c("DateTime", "deltaH"))
data <- read.csv(file_to_read, sep=';', header=F, col.names = c("DateTime", "deltaH"))
data$DateTime <- as.POSIXct(data$DateTime, tz="UTC")
data$Date <- as.Date(data$DateTime)
gauging_file <- paste0("Gauging_data/", stations$Site[i], "-Jaugeages.csv")
gauging_data <- read.csv(gauging_file)
i= 1
for(i in 1:nrow(stations)){
print(i)
file_to_read <- stations$File_location[i]
data <- read.csv(file_to_read, sep=';', header=F, col.names = c("DateTime", "deltaH"))
data$DateTime <- as.POSIXct(data$DateTime, tz="UTC")
data$Date <- as.Date(data$DateTime)
gauging_file <- paste0("Gauging_data/", stations$Site[i], "-Jaugeages.csv")
if(file.exists(gauging_file)){
gauging_data <- read.csv(gauging_file)
break
}
}
for(i in 1:nrow(stations)){
print(i)
file_to_read <- stations$File_location[i]
data <- read.csv(file_to_read, sep=';', header=F, col.names = c("DateTime", "deltaH"))
data$DateTime <- as.POSIXct(data$DateTime, tz="UTC")
data$Date <- as.Date(data$DateTime)
gauging_file <- paste0("Gauging_data/", stations$Site[i], "-Jaugeages.csv")
pring(gauging_file)
break
if(file.exists(gauging_file)){
gauging_data <- read.csv(gauging_file)
break
}
}
for(i in 1:nrow(stations)){
print(i)
file_to_read <- stations$File_location[i]
data <- read.csv(file_to_read, sep=';', header=F, col.names = c("DateTime", "deltaH"))
data$DateTime <- as.POSIXct(data$DateTime, tz="UTC")
data$Date <- as.Date(data$DateTime)
gauging_file <- paste0("Gauging_data/", stations$Site[i], "-Jaugeages.csv")
print(gauging_file)
break
if(file.exists(gauging_file)){
gauging_data <- read.csv(gauging_file)
break
}
}
gauging_data <- read.csv(gauging_file)
i= 1
for(i in 1:nrow(stations)){
print(i)
file_to_read <- stations$File_location[i]
data <- read.csv(file_to_read, sep=';', header=F, col.names = c("DateTime", "deltaH"))
data$DateTime <- as.POSIXct(data$DateTime, tz="UTC")
data$Date <- as.Date(data$DateTime)
gauging_file <- paste0("Gauging_data/", stations$Station[i], "-Jaugeages.csv")
print(gauging_file)
if(file.exists(gauging_file)){
gauging_data <- read.csv(gauging_file)
break
}
}
View(gauging_data)
View(gauging_data)
gauging_data$Datetime <- as.POSIXct(gauging_data$Date.de.début..TU., tz="UTC")
View(gauging_data)
gauging_data$Datetime <- as.POSIXct(gauging_data$Date.de.début..TU.)
View(gauging_data)
?as.POSIXct
gauging_data$Datetime <- as.POSIXct(gauging_data$Date.de.début..TU., format='%y-%m-%dT%T.000Z', tz="UTC")
gauging_data$Datetime <- as.POSIXct(gauging_data$Date.de.début..TU., format='%Y-%m-%dT%T.000Z', tz="UTC")
gauging_data$Date <- as.Date(data$Date)
gauging_data$Date <- as.Date(gauging_data$Datetime)
match(gauging_data$Date,data$Date)
for(i in 1:nrow(stations)){
print(i)
file_to_read <- stations$File_location[i]
data <- read.csv(file_to_read, sep=';', header=F, col.names = c("DateTime", "deltaH"))
data$DateTime <- as.POSIXct(data$DateTime, tz="UTC")
data$Date <- as.Date(data$DateTime)
gauging_file <- paste0("Gauging_data/", stations$Station[i], "-Jaugeages.csv")
print(gauging_file)
if(file.exists(gauging_file)){
gauging_data <- read.csv(gauging_file)
gauging_data$Datetime <- as.POSIXct(gauging_data$Date.de.début..TU., format='%Y-%m-%dT%T.000Z', tz="UTC")
gauging_data$Date <- as.Date(gauging_data$Datetime)
matches <- match(gauging_data$Date,data$Date)
if(any(!is.na(matches))){
break
}
}
}
matches
View(gauging_data)
View(data)
unique(matches)
unique_m <- unique(matches)
for(i in 1:nrow(stations)){
print(i)
file_to_read <- stations$File_location[i]
data <- read.csv(file_to_read, sep=';', header=F, col.names = c("DateTime", "deltaH"))
data$DateTime <- as.POSIXct(data$DateTime, tz="UTC")
data$Date <- as.Date(data$DateTime)
data$Gauging <- NA
gauging_file <- paste0("Gauging_data/", stations$Station[i], "-Jaugeages.csv")
print(gauging_file)
if(file.exists(gauging_file)){
gauging_data <- read.csv(gauging_file)
gauging_data$Datetime <- as.POSIXct(gauging_data$Date.de.début..TU., format='%Y-%m-%dT%T.000Z', tz="UTC")
gauging_data$Date <- as.Date(gauging_data$Datetime)
matches <- match(gauging_data$Date,data$Date)
unique_m <- unique(matches)
non_na <- !is.na(unique_m)
if(any(non_na)){
break
}
}
}
data$Gauging[unique_m[non_na]]
data$Gauging[unique_m[non_na]] <- Yes
data$Gauging[unique_m[non_na]] <- "Yes"
i= 1
for(i in 1:nrow(stations)){
print(i)
file_to_read <- stations$File_location[i]
data <- read.csv(file_to_read, sep=';', header=F, col.names = c("DateTime", "deltaH"))
data$DateTime <- as.POSIXct(data$DateTime, tz="UTC")
data$Date <- as.Date(data$DateTime)
data$Gauging <- NA
gauging_file <- paste0("Gauging_data/", stations$Station[i], "-Jaugeages.csv")
print(gauging_file)
if(file.exists(gauging_file)){
gauging_data <- read.csv(gauging_file)
break
gauging_data$Datetime <- as.POSIXct(gauging_data$Date.de.début..TU., format='%Y-%m-%dT%T.000Z', tz="UTC")
gauging_data$Date <- as.Date(gauging_data$Datetime)
matches <- match(gauging_data$Date,data$Date)
unique_m <- unique(matches)
non_na <- !is.na(unique_m)
if(any(non_na)){
data$Gauging[unique_m[non_na]] <- "Yes"
}
}
data_unique_station[[i]] <- data
}
data_unique_station <- list()
i= 1
for(i in 1:nrow(stations)){
print(i)
file_to_read <- stations$File_location[i]
data <- read.csv(file_to_read, sep=';', header=F, col.names = c("DateTime", "deltaH"))
data$DateTime <- as.POSIXct(data$DateTime, tz="UTC")
data$Date <- as.Date(data$DateTime)
data$Gauging <- NA
gauging_file <- paste0("Gauging_data/", stations$Station[i], "-Jaugeages.csv")
print(gauging_file)
if(file.exists(gauging_file)){
gauging_data <- read.csv(gauging_file)
break
gauging_data$Datetime <- as.POSIXct(gauging_data$Date.de.début..TU., format='%Y-%m-%dT%T.000Z', tz="UTC")
gauging_data$Date <- as.Date(gauging_data$Datetime)
matches <- match(gauging_data$Date,data$Date)
unique_m <- unique(matches)
non_na <- !is.na(unique_m)
if(any(non_na)){
data$Gauging[unique_m[non_na]] <- "Yes"
}
}
data_unique_station[[i]] <- data
}
View(gauging_data)
